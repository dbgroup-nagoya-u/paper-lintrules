name: Linter
on: [pull_request]

jobs:
  textlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: reviewdog/action-setup@v1
      - name: Install textlint and packages
        run: |
          npm install textlint@latest \
          textlint-rule-preset-ja-technical-writing \
          textlint-rule-preset-jtf-style \
          textlint-rule-prh \
          textlint-filter-rule-allowlist \
          @textlint/textlint-plugin-text
      - name: Run textlint with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find . -type d \( -path './node_modules' \) -prune -false -o -iname '*.txt' -o -iname '*.tex');
          do
            echo "filename := ${file}"
            $(npm bin)/textlint --config ./lintrules/textlint/textlint.json -f checkstyle ${file} | reviewdog -f=checkstyle -name="textlint" -reporter=github-pr-review
          done

  latexlint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip install regex
        run: |
          pip install regex
      - name: Install draftcheck
        run: |
          git clone https://github.com/dvolgyes/draftcheck
          # Replace rules.py and script.py
          cp lintrules/draftcheck/rules.py draftcheck/draftcheck/rules.py
          cp lintrules/draftcheck/script.py draftcheck/draftcheck/script.py
          cd draftcheck
          python setup.py install
      - name: INFO draftcheck
        run: |
          for file in $(find . -type d \( -path './node_modules' \) -prune -false -o -iname '*.tex');
          do
            draftcheck ${file} >> output.txt || true
          done
          cat output.txt
      - uses: reviewdog/action-setup@v1
      - name: Run draftcheck to tex with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find . -type d \( -path './node_modules' \) -prune -false -o -iname '*.tex');
          do
            echo "filename := ${file}"
            draftcheck ${file} | reviewdog -efm="%f:%l:%c: %m" -name="latexlint by draftcheck" -reporter=github-pr-review
          done
      - uses: reviewdog/action-setup@v1
      - name: Run draftcheck to bib with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find . -type d \( -path './node_modules' \) -prune -false -o -iname '*.bib');
          do
            echo "filename := ${file}"
            grep -P -n '(?<!\\url{)(\bhttps?://)[^\s.]+\.[-A-Za-z0-9+&@#/%?=~_|!:,.;]+' ${file} | reviewdog -efm="%l:%m" -name="latexlint by draftcheck" -reporter=github-pr-review
          done
